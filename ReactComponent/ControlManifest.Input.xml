<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="ReactComponents" constructor="ReactComponent" version="0.0.1" display-name-key="ReactComponent" description-key="ReactComponent description" control-type="virtual" >
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
    <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type="SingleLine.Text" usage="bound" required="true" />

    <property name="selectedColor" display-name-key="selectedColor" description-key="Choose a Tailwind CSS Color" of-type="Enum" usage="input" required="true" default-value="slate-500">
      <value name="Slate" display-name-key="Slate" description-key="Slate color">slate-500</value>
      <value name="Gray" display-name-key="Gray" description-key="Gray color">gray-500</value>
      <value name="Zinc" display-name-key="Zinc" description-key="Zinc color">zinc-500</value>
      <value name="Neutral" display-name-key="Neutral" description-key="Neutral color">neutral-500</value>
      <value name="Stone" display-name-key="Stone" description-key="Stone color">stone-500</value>

      <value name="Red" display-name-key="Red" description-key="Red color">red-500</value>
      <value name="Orange" display-name-key="Orange" description-key="Orange color">orange-500</value>
      <value name="Amber" display-name-key="Amber" description-key="Amber color">amber-500</value>
      <value name="Yellow" display-name-key="Yellow" description-key="Yellow color">yellow-500</value>
      <value name="Lime" display-name-key="Lime" description-key="Lime color">lime-500</value>

      <value name="Green" display-name-key="Green" description-key="Green color">green-500</value>
      <value name="Emerald" display-name-key="Emerald" description-key="Emerald color">emerald-500</value>
      <value name="Teal" display-name-key="Teal" description-key="Teal color">teal-500</value>
      <value name="Cyan" display-name-key="Cyan" description-key="Cyan color">cyan-500</value>
      <value name="Sky" display-name-key="Sky" description-key="Sky color">sky-500</value>

      <value name="Blue" display-name-key="Blue" description-key="Blue color">blue-500</value>
      <value name="Indigo" display-name-key="Indigo" description-key="Indigo color">indigo-500</value>
      <value name="Violet" display-name-key="Violet" description-key="Violet color">violet-500</value>
      <value name="Purple" display-name-key="Purple" description-key="Purple color">purple-500</value>
      <value name="Fuchsia" display-name-key="Fuchsia" description-key="Fuchsia color">fuchsia-500</value>
      <value name="Pink" display-name-key="Pink" description-key="Pink color">pink-500</value>
      <value name="Rose" display-name-key="Rose" description-key="Rose color">rose-500</value>

      <!-- No shade -->
      <value name="White" display-name-key="White" description-key="White color">white</value>
      <value name="Black" display-name-key="Black" description-key="Black color">black</value>
      <value name="Transparent" display-name-key="Transparent" description-key="Transparent color">transparent</value>
    </property>

    <!--
      Property node's of-type attribute can be of-type-group attribute.
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts" order="1"/>
      <platform-library name="React" version="16.14.0" />
      <platform-library name="Fluent" version="9.46.2" />
      <css path="css/tailwind.css" order="1" />
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/ReactComponent.css" order="1" />
      <resx path="strings/ReactComponent.1033.resx" version="1.0.0" />
      -->
    </resources>
    <!-- UNCOMMENT TO ENABLE THE SPECIFIED API
    <feature-usage>
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
    -->
  </control>
</manifest>
